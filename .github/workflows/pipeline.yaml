name: Deploy application

on:
  push:
    branches:
      - main     
    tags: [ 'v*.*.*' ] 

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-clster
  GKE_ZONE: europe-north1-b
  BE_IMAGE: todo-backend
  APP_IMAGE: todo-app
  BRDC_IMAGE: todo-broadcaster
  CRON_IMAGE: todo-cron
  BACKUP_IMAGE: backup-cron
  TAG: ${{ github.sha }}

jobs:
  build-publish:
    name: Build, Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud --quiet auth configure-docker

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Build and publish backend
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$BE_IMAGE:$TAG" ./backend
          docker push "gcr.io/$PROJECT_ID/$BE_IMAGE:$TAG"

      - name: Build and publish app
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$APP_IMAGE:$TAG" ./app
          docker push "gcr.io/$PROJECT_ID/$APP_IMAGE:$TAG"

      - name: Build and broadcaster
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$BRDC_IMAGE:$TAG" ./broadcaster
          docker push "gcr.io/$PROJECT_ID/$BRDC_IMAGE:$TAG"

      - name: Build and publish wikipedia cron
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$CRON_IMAGE:$TAG" ./cron
          docker push "gcr.io/$PROJECT_ID/$CRON_IMAGE:$TAG"

      - name: Build and publish backup cron
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$BACKUP_IMAGE:$TAG" ./backup
          docker push "gcr.io/$PROJECT_ID/$BACKUP_IMAGE:$TAG"

  mod-confs:
    needs: [build-publish]
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout tools repo
      uses: actions/checkout@v4
      with:
        repository: mluukkai/kproject-conf

    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v2

    - name: update production images
      if: ${{ startsWith(github.ref_name, 'v') }}
      run: |-
        kustomize edit set image PROJECT/BE_IMAGE="gcr.io/$PROJECT_ID/$BE_IMAGE:$TAG"
        kustomize edit set image PROJECT/APP_IMAGE="gcr.io/$PROJECT_ID/$APP_IMAGE:$TAG"
        kustomize edit set image PROJECT/BRDC_IMAGE="gcr.io/$PROJECT_ID/$BRDC_IMAGE:$TAG"
        kustomize edit set image PROJECT/BACKUP_IMAGE="gcr.io/$PROJECT_ID/$BACKUP_IMAGE:$TAG"
        kustomize edit set image PROJECT/CRON_IMAGE="gcr.io/$PROJECT_ID/$CRON_IMAGE:$TAG"
        kustomize edit set image PROJECT/BACKUP_IMAGE="gcr.io/$PROJECT_ID/$BACKUP_IMAGE:$TAG"
      working-directory: overlays/prod
    
    - name: upate staging images
      if: ${{ !startsWith(github.ref_name, 'v') }}
      run: |-
        kustomize edit set image PROJECT/BE_IMAGE="gcr.io/$PROJECT_ID/$BE_IMAGE:$TAG"
        kustomize edit set image PROJECT/APP_IMAGE="gcr.io/$PROJECT_ID/$APP_IMAGE:$TAG"
        kustomize edit set image PROJECT/BRDC_IMAGE="gcr.io/$PROJECT_ID/$BRDC_IMAGE:$TAG"
        kustomize edit set image PROJECT/BACKUP_IMAGE="gcr.io/$PROJECT_ID/$BACKUP_IMAGE:$TAG"
        kustomize edit set image PROJECT/CRON_IMAGE="gcr.io/$PROJECT_ID/$CRON_IMAGE:$TAG"
      working-directory: overlays/staging

    - name: push to confs
      uses: cpina/github-action-push-to-another-repository@main
      env:
        SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
      with:
        source-directory: '.'
        destination-github-username: 'mluukkai'
        destination-repository-name: 'kproject-conf'
        user-email: mluukkai@iki.fi
        target-branch: main